//first method I found

import java.util.Scanner;
import java.util.*;
import stdlib.StdIn;
import stdlib.StdOut;
import java.lang.Math.*;
public class GreatCircle {
public static void main(String[] args) {
System.out.print("Enter latitude and longitude of two points: "); //prompt the user
String input = StdIn.readLine(); // get the input
StringTokenizer points = new StringTokenizer(input); //tokenize the input based on where spaces are

double lat1 = Double.parseDouble(points.nextToken()); // read the first token as a double
double long1 = Double.parseDouble(points.nextToken()); // read the second token as a double
double lat2 = Double.parseDouble(points.nextToken()); // read the third token as a double
double long2 = Double.parseDouble(points.nextToken()); // read the fourth token as a double
double d = distance(lat1, long1, lat2, long2); // this invokes the distance method below, and supplies it with the 4 doubles

System.out.println("Distance is " + d + " miles");
}

// this is the method that calculates the distance of two points on Earth, based on their latitude and longitude
// it takes 4 doubles as arguments, and uses methods in the Math class to compute the distance in miles
public static double distance(double x0, double y0, double x1, double y1) {
double R = 3950.02;
double d = R* Math.acos(Math.sin(Math.toRadians(x0))*Math.sin(Math.toRadians(x1)) + 
Math.cos(Math.toRadians(x0))*Math.cos(Math.toRadians(x1))*Math.cos(Math.toRadians(y0 - y1)));
return d;

}
}

//This is a Great Circle Method from princeton
public class GreatCircle { 
    public static void main(String[] args) { 
        double x1 = Math.toRadians(Double.parseDouble(args[0]));
        double y1 = Math.toRadians(Double.parseDouble(args[1]));
        double x2 = Math.toRadians(Double.parseDouble(args[2]));
        double y2 = Math.toRadians(Double.parseDouble(args[3]));

       /*************************************************************************
        * Compute using law of cosines
        *************************************************************************/
        // great circle distance in radians
        double angle1 = Math.acos(Math.sin(x1) * Math.sin(x2)
                      + Math.cos(x1) * Math.cos(x2) * Math.cos(y1 - y2));

        // convert back to degrees
        angle1 = Math.toDegrees(angle1);

        // each degree on a great circle of Earth is 60 nautical miles
        double distance1 = 60 * angle1;

        System.out.println(distance1 + " nautical miles");


       /*************************************************************************
        * Compute using Haverside formula
        *************************************************************************/
        double a = Math.pow(Math.sin((x2-x1)/2), 2)
                 + Math.cos(x1) * Math.cos(x2) * Math.pow(Math.sin((y2-y1)/2), 2);

        // great circle distance in radians
        double angle2 = 2 * Math.asin(Math.min(1, Math.sqrt(a)));

        // convert back to degrees
        angle2 = Math.toDegrees(angle2);

        // each degree on a great circle of Earth is 60 nautical miles
        double distance2 = 60 * angle2;

        System.out.println(distance2 + " nautical miles");

   }

}
